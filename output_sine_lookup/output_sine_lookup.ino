//sine value is read out from precomputed lookup table.
//its amplitude is output as a pwm singal at pinOUT.
//the idea is to low-pass this signal to generate a simulated analog output.
//the output signal should be connected to pinIN after filtering, where it's read in.
//then this value is printed together with the computed value over serial.
//this way both signal can be compared in the arduino plotter.
//don't forget to set the right baud rate !

#define pinOUT A0
#define pinIN A1

int lookup = 0;    //varaible for navigating through the tables

/*
 * generation of lookup values in python:
 * import numpy as np
 * x = np.linspace(0,2*np.pi,513)
 * f1 = np.sin(x[:-1])
 * f2 = np.round((f1+1)*512).astype(int)
 * f3=''
 * for e in f2:
 *   f3+=str(e)+','
 * print(f3)
 */

int sintab2[512] = {512, 518, 525, 531, 537, 543, 550, 556, 562, 568, 575, 581, 587, 593, 600, 606, 612, 618, 624, 630, 636, 642, 649, 655, 661, 667, 673, 679, 684, 690, 696, 702, 708, 714, 719, 725, 731, 737, 742, 748, 753, 759, 764, 770, 775, 781, 786, 791, 796, 802, 807, 812, 817, 822, 827, 832, 837, 842, 846, 851, 856, 860, 865, 870, 874, 878, 883, 887, 891, 896, 900, 904, 908, 912, 916, 919, 923, 927, 931, 934, 938, 941, 945, 948, 951, 954, 957, 961, 964, 966, 969, 972, 975, 977, 980, 983, 985, 987, 990, 992, 994, 996, 998, 1000, 1002, 1004, 1005, 1007, 1009, 1010, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1022, 1023, 1023, 1023, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1023, 1023, 1023, 1022, 1022, 1021, 1020, 1019, 1018, 1017, 1016, 1015, 1014, 1013, 1012, 1010, 1009, 1007, 1005, 1004, 1002, 1000, 998, 996, 994, 992, 990, 987, 985, 983, 980, 977, 975, 972, 969, 966, 964, 961, 957, 954, 951, 948, 945, 941, 938, 934, 931, 927, 923, 919, 916, 912, 908, 904, 900, 896, 891, 887, 883, 878, 874, 870, 865, 860, 856, 851, 846, 842, 837, 832, 827, 822, 817, 812, 807, 802, 796, 791, 786, 781, 775, 770, 764, 759, 753, 748, 742, 737, 731, 725, 719, 714, 708, 702, 696, 690, 684, 679, 673, 667, 661, 655, 649, 642, 636, 630, 624, 618, 612, 606, 600, 593, 587, 581, 575, 568, 562, 556, 550, 543, 537, 531, 525, 518, 512, 506, 499, 493, 487, 481, 474, 468, 462, 456, 449, 443, 437, 431, 424, 418, 412, 406, 400, 394, 388, 382, 375, 369, 363, 357, 351, 345, 340, 334, 328, 322, 316, 310, 305, 299, 293, 287, 282, 276, 271, 265, 260, 254, 249, 243, 238, 233, 228, 222, 217, 212, 207, 202, 197, 192, 187, 182, 178, 173, 168, 164, 159, 154, 150, 146, 141, 137, 133, 128, 124, 120, 116, 112, 108, 105, 101, 97, 93, 90, 86, 83, 79, 76, 73, 70, 67, 63, 60, 58, 55, 52, 49, 47, 44, 41, 39, 37, 34, 32, 30, 28, 26, 24, 22, 20, 19, 17, 15, 14, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 19, 20, 22, 24, 26, 28, 30, 32, 34, 37, 39, 41, 44, 47, 49, 52, 55, 58, 60, 63, 67, 70, 73, 76, 79, 83, 86, 90, 93, 97, 101, 105, 108, 112, 116, 120, 124, 128, 133, 137, 141, 146, 150, 154, 159, 164, 168, 173, 178, 182, 187, 192, 197, 202, 207, 212, 217, 222, 228, 233, 238, 243, 249, 254, 260, 265, 271, 276, 282, 287, 293, 299, 305, 310, 316, 322, 328, 334, 340, 345, 351, 357, 363, 369, 375, 382, 388, 394, 400, 406, 412, 418, 424, 431, 437, 443, 449, 456, 462, 468, 474, 481, 487, 493, 499, 506};

void setup()
{
  Serial.begin(38400);
  pinMode(pinOUT, OUTPUT);
  digitalWrite(pinOUT, LOW);
  pinMode(pinIN, INPUT);
}

void loop()
{
  int var = sintab2[lookup];
  analogWrite(pinOUT, var>>2);
  int sensorValue1 = analogRead(pinIN);
  Serial.print(sensorValue1);
  Serial.print(" ");
  Serial.print(var);
  Serial.print(" ");
  Serial.print(0);  // To freeze the lower limit
  Serial.print(" ");
  Serial.print(1023);  // To freeze the upper limit
  Serial.print(" ");
  Serial.println();
  
  lookup = (lookup + 1) & 511;
}
